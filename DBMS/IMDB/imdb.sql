-- MySQL Script generated by MySQL Workbench
-- Tuesday 27 August 2019 07:14:41 PM IST
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema imdb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `imdb` ;

-- -----------------------------------------------------
-- Schema imdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `imdb` ;
USE `imdb` ;

-- -----------------------------------------------------
-- Table `imdb`.`Movies`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`Movies` ;

CREATE TABLE IF NOT EXISTS `imdb`.`Movies` (
  `movie_id` INT NOT NULL,
  `movie_name` VARCHAR(45) NULL,
  `rating` FLOAT NULL,
  `category` VARCHAR(45) NULL,
  PRIMARY KEY (`movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `imdb`.`Actors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`Actors` ;

CREATE TABLE IF NOT EXISTS `imdb`.`Actors` (
  `actor_id` INT NOT NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NULL,
  PRIMARY KEY (`actor_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `imdb`.`TVSeries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`TVSeries` ;

CREATE TABLE IF NOT EXISTS `imdb`.`TVSeries` (
  `tv_id` INT NOT NULL,
  `tv_name` VARCHAR(45) NULL,
  `rating` FLOAT NULL,
  `category` VARCHAR(45) NULL,
  PRIMARY KEY (`tv_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `imdb`.`Movies_has_Actors`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`Movies_has_Actors` ;

CREATE TABLE IF NOT EXISTS `imdb`.`Movies_has_Actors` (
  `Movies_movie_id` INT NOT NULL,
  `Actors_actor_id` INT NOT NULL,
  PRIMARY KEY (`Movies_movie_id`, `Actors_actor_id`),
  INDEX `fk_Movies_has_Actors_Actors1_idx` (`Actors_actor_id` ASC),
  INDEX `fk_Movies_has_Actors_Movies1_idx` (`Movies_movie_id` ASC),
  CONSTRAINT `fk_Movies_has_Actors_Movies1`
    FOREIGN KEY (`Movies_movie_id`)
    REFERENCES `imdb`.`Movies` (`movie_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Movies_has_Actors_Actors1`
    FOREIGN KEY (`Actors_actor_id`)
    REFERENCES `imdb`.`Actors` (`actor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `imdb`.`Actors_has_TVSeries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `imdb`.`Actors_has_TVSeries` ;

CREATE TABLE IF NOT EXISTS `imdb`.`Actors_has_TVSeries` (
  `Actors_actor_id` INT NOT NULL,
  `TVSeries_tv_id` INT NOT NULL,
  PRIMARY KEY (`Actors_actor_id`, `TVSeries_tv_id`),
  INDEX `fk_Actors_has_TVSeries_TVSeries1_idx` (`TVSeries_tv_id` ASC),
  INDEX `fk_Actors_has_TVSeries_Actors1_idx` (`Actors_actor_id` ASC),
  CONSTRAINT `fk_Actors_has_TVSeries_Actors1`
    FOREIGN KEY (`Actors_actor_id`)
    REFERENCES `imdb`.`Actors` (`actor_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Actors_has_TVSeries_TVSeries1`
    FOREIGN KEY (`TVSeries_tv_id`)
    REFERENCES `imdb`.`TVSeries` (`tv_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
